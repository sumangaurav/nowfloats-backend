{"version":3,"sources":["css/SlotColumn.module.scss","css/TextColumn.module.scss","images/search.svg","images/call.svg","images/close.svg","images/morning.svg","images/evening.svg","images/night.svg","components/Header.js","components/TextColumn.js","Slots.js","components/SlotTable.js","dateUtils.js","components/SlotColumn.js","components/MainBody.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","useState","showSearchBar","toggleSearchBar","href","className","src","dialer","alt","onClick","searchIcon","Fragment","closeIcon","name","type","placeholder","TextColumn","showMore","setShowMore","styles","section","left","createSlotObject","text","available","slots","slotObj","morning","evening","night","i","s1","s2","push","length","disabledSlots","SlotTable","newSlotObj","tod","slot","table","Object","keys","map","row","ind","key","rowSpan","morningSrc","eveningSrc","nightSrc","data-tip","data-for","strikeText","id","place","border","borderColor","effect","fullDays","fullMonths","SlotColumn","Date","selectedDate","setDate","showLoader","toggleLoader","setSlotObj","useEffect","a","date","getFullYear","getMonth","getDate","url","console","log","fetch","json","then","res","catch","err","fetchData","handleDateChange","op","getTime","widget","header","value","day","ev","number","getDay","slice","months","formattedDate","loader","MainBody","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9e3f539e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"borderColor\":\"#8F8F8F\",\"section\":\"SlotColumn_section__ATLXX\",\"widget\":\"SlotColumn_widget__cjIQJ\",\"header\":\"SlotColumn_header__orsJM\",\"widget-body\":\"SlotColumn_widget-body__25qKS\",\"day\":\"SlotColumn_day__2P5g1\",\"left-arrow\":\"SlotColumn_left-arrow__V95Aa\",\"right-arrow\":\"SlotColumn_right-arrow__1GvOM\",\"down-arrow\":\"SlotColumn_down-arrow__2e1fv\",\"strikeText\":\"SlotColumn_strikeText__10gHt\",\"available\":\"SlotColumn_available__TZQS_\",\"loader\":\"SlotColumn_loader__3uxQ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"TextColumn_section__ABjNj\",\"left\":\"TextColumn_left__8q5KF\",\"see-more\":\"TextColumn_see-more__3hc7v\"};","module.exports = __webpack_public_path__ + \"static/media/search.11a49aa5.svg\";","module.exports = __webpack_public_path__ + \"static/media/call.578398ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.ebf2f3f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/morning.2dca0d0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/evening.b92b1b19.svg\";","module.exports = __webpack_public_path__ + \"static/media/night.d557b55f.svg\";","import React,{ useState } from \"react\"\n\nimport dialer from \"../images/call.svg\"\nimport searchIcon from \"../images/search.svg\"\nimport closeIcon from \"../images/close.svg\"\n\nexport default function Header(props){\n\n  const [showSearchBar, toggleSearchBar] = useState(false)\n  return (\n    <header>\n      <nav>\n        <ul>\n          <li><a href=\"#\">Home</a></li>\n          <li><a href=\"#\">About</a></li>\n          <li><a href=\"#\">Services</a></li>\n          <li><a href=\"#\">Updates</a></li>\n          <li><a href=\"#\">More Info</a></li>\n          <li><a href=\"#\">Contact</a></li>\n        </ul>\n      </nav>\n      <div className=\"contact\">\n        <a href=\"tel:+91 8123456789\">\n          <img className=\"dialer-icon\" src={dialer} alt=\"phone-icon\" />\n          +91 8123456789\n        </a>\n      </div>\n      \n      <div className=\"search\">\n        <span className=\"bp1\">\n          {\n            !showSearchBar && \n            <img onClick={() => toggleSearchBar(true) } className=\"search-icon\" src={searchIcon} alt=\"search-icon\"></img>\n          }\n          \n          {\n            showSearchBar &&\n            (\n              <React.Fragment>\n                <img onClick={() => toggleSearchBar(false) } className=\"close-icon\" src={closeIcon} alt=\"close-icon\"></img>\n                <input name=\"searchText\" type=\"text\" placeholder=\"Search\"/> \n              </React.Fragment>\n            )\n          }\n        </span>\n        <span className=\"bp2\">\n          <img className=\"search-icon\" src={searchIcon} alt=\"search-icon\"></img>\n          <input name=\"searchText\" type=\"text\" placeholder=\"Search\"/>\n        </span>\n      </div>\n    </header>\n    )\n  }","import React, { useState } from \"react\"\n\nimport styles from \"../css/TextColumn.module.scss\"\n\nexport default function TextColumn(props){\n\tconst [showMore, setShowMore] = useState(false);\n\treturn (\n\t\t<section className={styles.section}>\n\t\t\t<div className={styles.left}>\n\t\t\t\t<h3>Welcome to</h3>\n\t\t\t\t<h1>Dixit Healing Chamber</h1>\n\t\t\t\t<p>\n\t\t\t\tHomeopathic clinic of Dr. Shravan Dixit is located in Jublie Hills, Hyderabad. The clinic was established in 2006 and is one of the most reputed clinic in the vicinity. Guided by a clear vision \n\t\t\t\t{ \n\t\t\t\t\t!showMore && \n\t\t\t\t\t<span> ... <span className={styles[\"see-more\"]} onClick={ () => setShowMore(true) }>SEE MORE</span></span> \n\t\t\t\t}\n\t\t\t\t{ \n\t\t\t\t\tshowMore &&\n\t\t\t\t\t<span>\n\t\t\t\t\t, he personally diagnose and treats all this patients. He is a very good listener and understands the patients very well.\n\t\t\t\t\t<span className={styles[\"see-more\"]} onClick={ () => setShowMore(false) }>SEE LESS</span> \n\t\t\t\t\t</span>\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t</p>\n\t\t\t\t<button>Meet the doctor</button>\n\t\t\t</div>\n\t\t</section>\n\t\t)\n\t}","function createSlotObject(text, available){\n  return {\n    text,\n    available\n  }\n}\n\nconst slots = []\nconst slotObj = {\n  morning: [],\n  evening: [],\n  night: []\n}\n\nfor( let i=10; i < 22; i++ ){\n  let s1,s2\n  if( i < 12 ){\n    s1 = `${i}:00 AM`\n    s2 = `${i}:30 AM`\n  }\n  else if ( i === 12 ){\n    s1 = `12:00 PM`\n    s2 = `12:30 PM`\n  }\n  else {\n    s1 = `0${i % 12}:00 PM`\n    s2 = `0${i % 12}:30 PM`\n  }\n  \n  slots.push(createSlotObject(s1,false))\n  slots.push(createSlotObject(s2,false))\n}\n\nslots.push(createSlotObject('10:00 PM',true))\nslots.push(createSlotObject('10:30 PM',true))\nslots.push(createSlotObject('11:00 PM',true))\n\n\nfor( let i=0; i < slots.length; i++){\n  if( i / 9 < 1)\n    slotObj[\"morning\"].push(slots[i]);\n  else if ( i / 9 < 2)\n    slotObj[\"evening\"].push(slots[i]);\n  else \n    slotObj[\"night\"].push(slots[i]);\n}\n\nconst disabledSlots = {\n  \"12:30 PM\" : true,\n  \"03:00 PM\" : true,\n  \"03:30 PM\" : true,\n  \"08:00 PM\" : true,\n  \"10:30 PM\" : true,\n  \"11:00 PM\" : true\n}\n\nexport default slots\nexport { slotObj, disabledSlots }","import React from \"react\"\nimport ReactTooltip from \"react-tooltip\"\n\nimport slot from \"../css/SlotColumn.module.scss\"\nimport morningSrc from \"../images/morning.svg\"\nimport eveningSrc from \"../images/evening.svg\"\nimport nightSrc from \"../images/night.svg\"\n\nimport { disabledSlots } from \"../Slots\"\n\nexport default function SlotTable({slotObj}){\n\n  const newSlotObj = {}\n\n  for( let tod in slotObj){\n    newSlotObj[tod] = [];\n    for( let i=0; i < 3; i++){\n      newSlotObj[tod].push([\n        slotObj[tod][3*i],\n        slotObj[tod][3*i + 1],\n        slotObj[tod][3*i + 2]\n      ])\n    }\n  }\n\n\treturn (\n    <React.Fragment>\n      <table className={ slot.table }>\n        <tbody>\n          {\n            Object.keys(newSlotObj).map( (tod) =>{\n              return newSlotObj[tod].map( (row, ind) => {\n                return (\n                  <tr key={`${tod}-${ind}`}>\n                    { \n                      ( ind === 0 ) && \n                      <th rowSpan=\"3\">\n                        <div>\n                          { tod === 'morning' ?\n                              <img src={morningSrc}/>: \n                              (tod === 'evening') ?\n                                <img src={eveningSrc} /> :\n                                <img src={nightSrc}/>\n                          }\n                        </div>\n                        <div>{tod}</div>\n                      </th>\n                    }\n                    { \n                      ( row[0].available && !disabledSlots[row[0].text]) ? \n                      <td data-tip data-for=\"available\" className={slot.available}>\n                        { row[0].text }\n                      </td> :\n                      <td data-tip data-for=\"unavailable\" className={slot.strikeText}>\n                        { disabledSlots[row[0].text] ? \"-\" : row[0].text }\n                      </td>\n                    }\n                    { \n                      ( row[1].available && !disabledSlots[row[1].text]) ? \n                      <td data-tip data-for=\"available\" className={slot.available}>\n                        { row[1].text }\n                      </td> :\n                      <td data-tip data-for=\"unavailable\" className={slot.strikeText}>\n                        { disabledSlots[row[1].text] ? \"-\" : row[1].text }\n                      </td>\n                    }\n                    { \n                      ( row[2].available && !disabledSlots[row[2].text]) ? \n                      <td data-tip data-for=\"available\" className={slot.available}>\n                        { row[2].text }\n                      </td> :\n                      <td data-tip data-for=\"unavailable\" className={slot.strikeText}>\n                        { disabledSlots[row[2].text] ? \"-\" : row[2].text }\n                      </td>\n                    }\n                    {/* <td className={!row[0].available ? slot.strikeText : null}>\n                      { disabledSlots[row[0].text] ? \"-\" : row[0].text }\n                    </td>\n                    <td className={!row[0].available ? slot.strikeText : null}>\n                      { disabledSlots[row[1].text] ? \"-\" : row[0].text }\n                    </td>\n                    <td className={!row[0].available ? slot.strikeText : null}>\n                      { disabledSlots[row[2].text] ? \"-\" : row[0].text }\n                    </td> */}\n                  </tr>\n                )\n              })\n            })\n          }\n        </tbody>  \n      </table>\n      <ReactTooltip id=\"available\" place=\"top\" type=\"light\" border={true} borderColor={slot.borderColor} effect=\"float\">\n          <span> Slot is available </span>\n      </ReactTooltip>\n      <ReactTooltip id=\"unavailable\" place=\"top\" type=\"light\" border={true} borderColor={slot.borderColor} effect=\"float\">\n        <span> Slot is unavailable </span>\n      </ReactTooltip>\n    </React.Fragment>\n  \n  )\n}","const fullDays = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday'\n]\n\nconst fullMonths = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n]\n\nconst shortDays = number => fullDays[number].slice(0,3)\nconst shortMonths = number => fullMonths[number].slice(0,3)\n\nexport { \n  fullDays, \n  fullMonths,\n  shortDays,\n  shortMonths\n}","import React, { useState, useEffect } from \"react\"\n\nimport slot from \"../css/SlotColumn.module.scss\"\nimport SlotTable from \"./SlotTable\"\n\nimport { shortDays as days, shortMonths as months} from \"../dateUtils\"\n\nexport default function SlotColumn(props){\n\n\tconst [selectedDate, setDate] = useState(new Date())\n\tconst [showLoader, toggleLoader] = useState(false)\n\tconst [slotObj, setSlotObj] = useState({})\n\n\tconst formattedDate = date => \n\t\t`${days(date.getDay())}, ${date.getDate()} ${months(date.getMonth())}`\n\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst date = `${selectedDate.getFullYear()}-${selectedDate.getMonth()}-${selectedDate.getDate()}`\n\t\t\tconst url = `http://localhost:3001/api?date=${date}`\n\n\t\t\tconsole.log(url)\n\t\t\ttoggleLoader(true)\n\t\t\tconst res = await fetch(url)\n\t\t\tres\n\t\t\t\t.json()\n\t\t\t\t.then(res => {\n\t\t\t\t\tconsole.log(\"response\",res)\n\t\t\t\t\tsetSlotObj(res)\n\t\t\t\t\ttoggleLoader(false)\n\t\t\t\t})\n\t\t\t\t.catch(err => console.log(\"error\",err))\n\t\t}\n\n\t\tfetchData();\n\t},[selectedDate]);\t\n\t\n\tconst handleDateChange= (op) => {\n\t\tconst date = selectedDate\n\t\tconst dayDuration = 86400000\n\t\tif( op === \"next\" ){\n\t\t\tsetDate(new Date(date.getTime() + dayDuration))\n\t\t}\n\t\t\t\n\t\tif( op === \"previous\")\n\t\t\tsetDate(new Date(date.getTime() - dayDuration))\n\t}\n\t\t\n\treturn (\n\t\t<section className={slot.section}>\n\t\t\t<div className={slot.widget}>\n\t\t\t\t<div className={slot.header}>\n\t\t\t\t\t<div>Book Appointment</div>\n\t\t\t\t\t<div>Have an Enquiry?</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={ slot[\"widget-body\"] }>\n\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t<legend> Purpose </legend>\n\t\t\t\t\t\t<select name=\"purpose\" id=\"purpose\">\n\t\t\t\t\t\t\t<option value=\"consultation\">Consultation</option>\n\t\t\t\t\t\t\t<option value=\"regular checkup\">Regular Checkup</option>\n\t\t\t\t\t\t\t<option value=\"followup\">FollowUp</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<div className={slot[\"down-arrow\"]}></div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className={ slot.day } id=\"selected-day\">\n\t\t\t\t\t\t\t<span onClick={ ev => handleDateChange(\"previous\")}> \n\t\t\t\t\t\t\t\t<div className={slot[\"left-arrow\"]}>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span>{ formattedDate(selectedDate) }</span>\n\t\t\t\t\t\t\t<span onClick={ ev => handleDateChange(\"next\")}>\n\t\t\t\t\t\t\t\t<div className={slot[\"right-arrow\"]}>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{ showLoader ?\n\t\t\t\t\t\t\t<div className={slot.loader}> \n\t\t\t\t\t\t\t\t<h2>Loading...</h2>\n\t\t\t\t\t\t\t</div> :\n\t\t\t\t\t\t\t<SlotTable slotObj={slotObj} />\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<button>\n\t\t\t\t\t\tContinue\n\t\t\t\t\t</button>    \n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t\t)\n\t}","import React from \"react\"\n\nimport TextColumn from \"./TextColumn\"\nimport SlotColumn from \"./SlotColumn\"\n\nimport mainbody from \"../css/MainBody.module.css\"\n\nexport default function MainBody(props){\n\treturn(\n\t\t<main>\n\t\t\t<TextColumn />\n\t\t\t<SlotColumn />\n\t\t</main>\n\t)\n} ","import React from 'react'\n\nimport Header from './components/Header'\nimport MainBody from './components/MainBody'\nimport \"./App.scss\"\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header />\n      <MainBody />\n    </React.Fragment>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}